`timescale 1ns/1ps

module testbit;	
	reg reset_n, clk;
	reg o_ready, i_valid, i_sop, i_eop, inp;
	wire i_ready, o_valid, o_sop, o_eop, outp;
	
	reg expt;
	integer iinp, io_ready, ii_valid, ii_sop , ii_eop;
	integer ooutp, oi_ready, oo_valid, oo_sop, oo_eop;
	integer mon;
	integer statusI, statusO;
	
	bitdetector dut(.clk(clk), .reset_n(reset_n)
						 .o_ready(o_ready),.i_valid(i_valid),.i_sop(i_sop),.i_eop(i_eop),.inp(inp)
						 .outp(outp),.o_eop(o_eop),.o_sop(o_sop),.o_valid(o_valid).i_ready(i_ready));
	
	always #2.5 clk = ~clk;
	
	initial begin
		clk = 1'b0;
		reset_n = 1'b0;
		o_ready = 1'b0;
		i_valid = 1'b0;
		i_sop   = 1'b0;
		i_eop   = 1'b0;
		inp 	  = 1'b0;
		in		= $fopen("input.txt","r");
		mon 	= $fopen("monitor.txt","w");
	
	end
endmodule 